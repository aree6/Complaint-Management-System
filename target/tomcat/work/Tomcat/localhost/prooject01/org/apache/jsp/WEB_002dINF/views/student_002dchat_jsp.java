/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-01-13 11:05:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class student_002dchat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Modern Chat</title>\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/emoji-mart@latest/css/emoji-mart.css\" rel=\"stylesheet\">\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/emoji-mart@latest/dist/emoji-mart.js\"></script>\n");
      out.write("    <style>\n");
      out.write("        * {\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            box-sizing: border-box;\n");
      out.write("            font-family: 'Inter', sans-serif;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        body {\n");
      out.write("            min-height: 100vh;\n");
      out.write("            background-image: \n");
      out.write("                radial-gradient(at 91% 62%, hsla(37,86%,88%,1) 0px, transparent 50%),\n");
      out.write("                radial-gradient(at 53% 29%, hsla(349,100%,84%,1) 0px, transparent 50%),\n");
      out.write("                radial-gradient(at 11% 45%, hsla(137,82%,83%,1) 0px, transparent 50%),\n");
      out.write("                radial-gradient(at 51% 94%, hsla(178,59%,76%,1) 0px, transparent 50%);\n");
      out.write("            position: relative;\n");
      out.write("            overflow-x: hidden;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Glass Container */\n");
      out.write("        .glass-container {\n");
      out.write("            background: rgba(255, 255, 255, 0.5);\n");
      out.write("            backdrop-filter: blur(10px);\n");
      out.write("            -webkit-backdrop-filter: blur(10px);\n");
      out.write("            border-radius: 20px;\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.8);\n");
      out.write("            box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.1);\n");
      out.write("            padding: 20px;\n");
      out.write("            position: relative;\n");
      out.write("            z-index: 1;\n");
      out.write("            margin: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .chat-box {\n");
      out.write("            height: 70vh;\n");
      out.write("            overflow-y: auto;\n");
      out.write("            padding: 1.5rem;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("            background: rgba(255, 255, 255, 0.5);\n");
      out.write("            border-radius: 15px;\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.3);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .chat-bubble {\n");
      out.write("            padding: 1rem;\n");
      out.write("            border-radius: 15px;\n");
      out.write("            max-width: 70%;\n");
      out.write("            margin-bottom: 1rem;\n");
      out.write("            backdrop-filter: blur(5px);\n");
      out.write("            -webkit-backdrop-filter: blur(5px);\n");
      out.write("            position: relative;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .sent {\n");
      out.write("            background: rgba(79, 70, 229, 0.1);\n");
      out.write("            color: #1e293b;\n");
      out.write("            margin-left: auto;\n");
      out.write("            border: 1px solid rgba(79, 70, 229, 0.2);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .received {\n");
      out.write("            background: rgba(255, 255, 255, 0.8);\n");
      out.write("            border: 1px solid rgba(0, 0, 0, 0.1);\n");
      out.write("            color: #1e293b;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .message-time {\n");
      out.write("            font-size: 0.75rem;\n");
      out.write("            opacity: 0.6;\n");
      out.write("            color: #475569;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Input Area */\n");
      out.write("        .input-group {\n");
      out.write("            background: rgba(255, 255, 255, 0.8);\n");
      out.write("            border-radius: 15px;\n");
      out.write("            overflow: hidden;\n");
      out.write("            border: 1px solid rgba(0, 0, 0, 0.1);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-control {\n");
      out.write("            background: transparent;\n");
      out.write("            border: none;\n");
      out.write("            color: #1e293b;\n");
      out.write("            padding: 15px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-control::placeholder {\n");
      out.write("            color: #64748b;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-control:focus {\n");
      out.write("            background: transparent;\n");
      out.write("            box-shadow: none;\n");
      out.write("            color: #1e293b;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-send {\n");
      out.write("            background: rgba(79, 70, 229, 0.1);\n");
      out.write("            border: 1px solid rgba(79, 70, 229, 0.2);\n");
      out.write("            color: #4f46e5;\n");
      out.write("            padding: 10px 20px;\n");
      out.write("            border-radius: 0 15px 15px 0;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-send:hover {\n");
      out.write("            background: rgba(79, 70, 229, 0.2);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Header */\n");
      out.write("        .chat-header {\n");
      out.write("            color: #1e293b;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-back {\n");
      out.write("            background: rgba(255, 255, 255, 0.8);\n");
      out.write("            border: 1px solid rgba(0, 0, 0, 0.1);\n");
      out.write("            color: #4f46e5;\n");
      out.write("            padding: 8px 20px;\n");
      out.write("            border-radius: 10px;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("            text-decoration: none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-back:hover {\n");
      out.write("            background: rgba(79, 70, 229, 0.1);\n");
      out.write("            color: #4f46e5;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Scrollbar */\n");
      out.write("        .chat-box::-webkit-scrollbar {\n");
      out.write("            width: 6px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .chat-box::-webkit-scrollbar-track {\n");
      out.write("            background: rgba(255, 255, 255, 0.3);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .chat-box::-webkit-scrollbar-thumb {\n");
      out.write("            background: rgba(79, 70, 229, 0.2);\n");
      out.write("            border-radius: 3px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .chat-box::-webkit-scrollbar-thumb:hover {\n");
      out.write("            background: rgba(79, 70, 229, 0.3);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        strong {\n");
      out.write("            color: #1e293b;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Message options and reactions */\n");
      out.write("        .message-options {\n");
      out.write("            display: none;\n");
      out.write("            position: absolute;\n");
      out.write("            right: -40px;\n");
      out.write("            top: 50%;\n");
      out.write("            transform: translateY(-50%);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .chat-bubble:hover .message-options {\n");
      out.write("            display: flex;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .reaction-button {\n");
      out.write("            padding: 4px;\n");
      out.write("            border-radius: 50%;\n");
      out.write("            background: white;\n");
      out.write("            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n");
      out.write("            cursor: pointer;\n");
      out.write("            margin: 2px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        /* Typing indicator */\n");
      out.write("        .typing-indicator {\n");
      out.write("            display: none;\n");
      out.write("            padding: 10px;\n");
      out.write("            margin: 10px 0;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .typing-dot {\n");
      out.write("            display: inline-block;\n");
      out.write("            width: 8px;\n");
      out.write("            height: 8px;\n");
      out.write("            margin-right: 4px;\n");
      out.write("            background: #90cdf4;\n");
      out.write("            border-radius: 50%;\n");
      out.write("            animation: typing 1s infinite ease-in-out;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        /* File attachment preview */\n");
      out.write("        .attachment-preview {\n");
      out.write("            max-width: 200px;\n");
      out.write("            margin: 10px 0;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            overflow: hidden;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        /* Message timestamp tooltip */\n");
      out.write("        .timestamp-tooltip {\n");
      out.write("            position: absolute;\n");
      out.write("            background: rgba(0,0,0,0.8);\n");
      out.write("            color: white;\n");
      out.write("            padding: 4px 8px;\n");
      out.write("            border-radius: 4px;\n");
      out.write("            font-size: 12px;\n");
      out.write("            display: none;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .chat-bubble:hover .timestamp-tooltip {\n");
      out.write("            display: block;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        button {\n");
      out.write("  font-family: inherit;\n");
      out.write("  font-size: 20px;\n");
      out.write("  background: transparent;\n");
      out.write("  color: royalblue;\n");
      out.write("  padding: 0.7em 1em;\n");
      out.write("  padding-left: 0.9em;\n");
      out.write("  display: flex;\n");
      out.write("  align-items: center;\n");
      out.write("  border: 0px solid royalblue;\n");
      out.write("  border-radius: 16px;\n");
      out.write("  overflow: hidden;\n");
      out.write("  transition: all 0.1s;\n");
      out.write("  cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button span {\n");
      out.write("  display: block;\n");
      out.write("  margin-left: 0.3em;\n");
      out.write("  transition: all 0.2s ease-in-out;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button svg {\n");
      out.write("  display: block;\n");
      out.write("  transform-origin: center center;\n");
      out.write("  transition: transform 0.2s ease-in-out;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button:hover .svg-wrapper {\n");
      out.write("  animation: fly-1 0.3s ease-in-out infinite alternate;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button:hover svg {\n");
      out.write("  transform: translateX(1.2em) rotate(45deg) scale(1.1);\n");
      out.write("}\n");
      out.write("\n");
      out.write("button:hover span {\n");
      out.write("  transform: translateX(5em);\n");
      out.write("}\n");
      out.write("\n");
      out.write("button:active {\n");
      out.write("  transform: scale(0.95);\n");
      out.write("}\n");
      out.write("\n");
      out.write("@keyframes fly-1 {\n");
      out.write("  from {\n");
      out.write("    transform: translateY(0.1em);\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  to {\n");
      out.write("    transform: translateY(-0.1em);\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"container-fluid\">\n");
      out.write("        <div class=\"row justify-content-center\">\n");
      out.write("            <div class=\"col-md-10\">\n");
      out.write("                <div class=\"glass-container\">\n");
      out.write("                    <div class=\"chat-header d-flex justify-content-between align-items-center\" style=\"background: rgba(248, 249, 252, 0.01) !important;\">\n");
      out.write("                        <h2>Chat - Complaint #");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${complaintId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</h2>\n");
      out.write("                        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/student/dashboard\" class=\"btn-back\">\n");
      out.write("                            <i class=\"fas fa-arrow-left\"></i> Back\n");
      out.write("                        </a>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div class=\"chat-box\" id=\"chatBox\" style=\"background: rgba(248, 249, 252, 0.1) !important;\">\n");
      out.write("                        <div class=\"messages-wrapper\">\n");
      out.write("                            ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/student/chat/send\" method=\"POST\">\n");
      out.write("                        <input type=\"hidden\" name=\"complaintId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${complaintId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">\n");
      out.write("                        <div class=\"input-group\">\n");
      out.write("                            <input type=\"text\" name=\"content\" class=\"form-control\" placeholder=\"Type your message...\">\n");
      out.write("                            <button>\n");
      out.write("                                <div class=\"svg-wrapper-1\">\n");
      out.write("                                  <div class=\"svg-wrapper\">\n");
      out.write("                                    <svg\n");
      out.write("                                      xmlns=\"http://www.w3.org/2000/svg\"\n");
      out.write("                                      viewBox=\"0 0 24 24\"\n");
      out.write("                                      width=\"24\"\n");
      out.write("                                      height=\"24\"\n");
      out.write("                                    >\n");
      out.write("                                      <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\n");
      out.write("                                      <path\n");
      out.write("                                        fill=\"currentColor\"\n");
      out.write("                                        d=\"M1.946 9.315c-.522-.174-.527-.455.01-.634l19.087-6.362c.529-.176.832.12.684.638l-5.454 19.086c-.15.529-.455.547-.679.045L12 14l6-8-8 6-8.054-2.685z\"\n");
      out.write("                                      ></path>\n");
      out.write("                                    </svg>\n");
      out.write("                                  </div>\n");
      out.write("                                </div>\n");
      out.write("                                <span>Send</span>\n");
      out.write("                              </button>\n");
      out.write("                        </div>\n");
      out.write("                    </form>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("    <script>\n");
      out.write("        const chatBox = document.getElementById('chatBox');\n");
      out.write("        \n");
      out.write("        function scrollToBottom() {\n");
      out.write("            chatBox.scrollTo({\n");
      out.write("                top: chatBox.scrollHeight,\n");
      out.write("                behavior: 'smooth'\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Initial scroll to bottom\n");
      out.write("        scrollToBottom();\n");
      out.write("    \n");
      out.write("        // Auto-scroll on new messages\n");
      out.write("        const observer = new MutationObserver(scrollToBottom);\n");
      out.write("        observer.observe(chatBox, { childList: true, subtree: true });\n");
      out.write("    \n");
      out.write("        // Auto-refresh every 30 seconds\n");
      out.write("        setInterval(() => {\n");
      out.write("            const isAtBottom = chatBox.scrollHeight - chatBox.scrollTop === chatBox.clientHeight;\n");
      out.write("            location.reload();\n");
      out.write("            if (isAtBottom) {\n");
      out.write("                scrollToBottom();\n");
      out.write("            }\n");
      out.write("        }, 30000);\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/views/student-chat.jsp(303,28) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/student-chat.jsp(303,28) '${messages}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${messages}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /WEB-INF/views/student-chat.jsp(303,28) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("message");
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                                <div class=\"d-flex flex-column ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.sender.id eq currentUserId ? 'align-items-end' : 'align-items-start'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\">\n");
          out.write("                                    <div class=\"chat-bubble ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.sender.id eq currentUserId ? 'sent' : 'received'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\">\n");
          out.write("                                        <div class=\"message-content\">\n");
          out.write("                                            <p class=\"mb-1\" style=\"font-size: 1.2rem;\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("</p>\n");
          out.write("                                            <div class=\"message-options\">\n");
          out.write("                                                <span class=\"reaction-button\" onclick=\"toggleEmojiPicker(this)\">\n");
          out.write("                                                    <i class=\"far fa-smile\"></i>\n");
          out.write("                                                </span>\n");
          out.write("                                                <span class=\"reaction-button\" onclick=\"toggleReply(this)\">\n");
          out.write("                                                    <i class=\"fas fa-reply\"></i>\n");
          out.write("                                                </span>\n");
          out.write("                                            </div>\n");
          out.write("                                        </div>\n");
          out.write("                                        <div class=\"message-footer\">\n");
          out.write("                                            <small class=\"message-time\">\n");
          out.write("                                                ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.sender.id eq currentUserId ? 'You' : message.sender.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\n");
          out.write("                                                <span class=\"timestamp-tooltip\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.createdAt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("</span>\n");
          out.write("                                            </small>\n");
          out.write("                                            <i class=\"fas fa-check-double text-primary\"></i>\n");
          out.write("                                        </div>\n");
          out.write("                                    </div>\n");
          out.write("                                </div>\n");
          out.write("                            ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    }
    return false;
  }
}
